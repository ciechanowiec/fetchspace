services:

  rocket-instance:
    environment:
      SLING_DIR: /opt/sling
      # comma-separated, like: basic,sling
      RUN_MODES: ${RUN_MODES}
      # On multi-version support: https://sling.apache.org/documentation/bundles/osgi-installer.html#multi-version-support-1
      ENABLE_MULTI_VERSION_SUPPORT: false
      HTTP_PORT: 8080
      # Leave the debug port empty to disable debugging mode:
      JAVA_DEBUG_PORT:
      EXTRA_JAVA_OPTS:
      BOT_TOKEN_PROD: ${BOT_TOKEN_PROD}
      BOT_TOKEN_STAGING: ${BOT_TOKEN_STAGING}
      CHATS_WITH_MODERATORS_IDS: ${CHATS_WITH_MODERATORS_IDS}
    image: ciechanowiec/rocket-instance:14.0.2
    container_name: rocket-instance
    volumes:
      - type: volume
        source: rocket-data
        target: /opt/sling/launcher/repository/segmentstore
    # Grace period should be long enough so that the JCR is closed correctly and doesn't get corrupted:
    stop_grace_period: 300s
    hostname: rocket-instance
    networks:
      - rocket-network
    ports:
      - target: 8080
        host_ip: 127.0.0.1
        published: 8080
        protocol: tcp
        mode: host
    labels:
      - "docker-volume-backup.stop-during-backup=false"

  backup:
    environment:
      # Every day at 1:00 a.m.
      BACKUP_CRON_EXPRESSION: "0 1 * * *"
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    image: offen/docker-volume-backup:v2
    container_name: backup
    volumes:
      - type: volume
        source: rocket-data
        target: /backup/rocket
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: ${HOME}/backups
        target: /archive
        read_only: false
    # Grace period should be long enough so that the JCR is closed correctly and doesn't get corrupted:
    stop_grace_period: 300s
    hostname: backup
    networks:
      - rocket-network
    depends_on:
      - rocket-instance

  rocket-nginx:
    environment:
      DOMAIN: fetchspace.org
      EMAIL: herman@ciechanowiec.eu
      IS_STAGING_ENV: ${IS_STAGING_ENV}
    image: ciechanowiec/rocket-nginx:14.0.2
    container_name: rocket-nginx
    volumes:
      - type: bind
        source: infra/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: infra/error.html
        target: /usr/share/nginx/html/error.html
        read_only: true
    hostname: rocket-nginx
    networks:
      - rocket-network
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host

volumes:
  rocket-data:
    name: "rocket-data"

networks:
  rocket-network:
    driver: bridge
    # This name is required to avoid name prefixing by Docker:
    name: rocket-network
